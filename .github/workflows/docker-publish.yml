name: Docker

on:
  push:
    tags: ["*.*.*"]

env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  REPO_IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  meta:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
      image_labels: ${{ steps.meta.outputs.labels }}
    steps:
      - name: Retrieve the tagged version
        id: version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REPO_IMAGE_NAME }}

  amd64:
    runs-on: ubuntu-latest
    needs: [meta]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log into registry ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache ~/.stack
        uses: actions/cache@v3
        with:
          path: ~/.stack
          key: ${{ runner.os }}-amd64-stack-global-${{ hashFiles('stack.yaml') }}-${{ hashFiles('package.yaml') }}
          restore-keys: |
            ${{ runner.os }}-amd64-stack-global-

      - name: Cache .stack-work
        uses: actions/cache@v3
        with:
          path: .stack-work
          key: ${{ runner.os }}-amd64-stack-work-${{ hashFiles('stack.yaml') }}-${{ hashFiles('package.yaml') }}-${{ hashFiles('**/*.hs') }}
          restore-keys: |
            ${{ runner.os }}-amd64-stack-work-

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          tags: ${{ env.REPO_IMAGE_NAME }}:${{ needs.meta.outputs.version }}-amd64
          platforms: linux/amd64
          push: true
          labels: ${{ needs.meta.outputs.image_labels }}
          build-args: |
            HLEDGER_VERSION=${{ needs.meta.outputs.version }}

  arm64:
    runs-on: ubuntu-latest
    needs: [meta]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Log into registry ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache ~/.stack
        uses: actions/cache@v3
        with:
          path: ~/.stack
          key: ${{ runner.os }}-arm64-stack-global-${{ hashFiles('stack.yaml') }}-${{ hashFiles('package.yaml') }}
          restore-keys: |
            ${{ runner.os }}-arm64-stack-global-

      - name: Cache .stack-work
        uses: actions/cache@v3
        with:
          path: .stack-work
          key: ${{ runner.os }}-arm64-stack-work-${{ hashFiles('stack.yaml') }}-${{ hashFiles('package.yaml') }}-${{ hashFiles('**/*.hs') }}
          restore-keys: |
            ${{ runner.os }}-arm64-stack-work-

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          tags: ${{ env.REPO_IMAGE_NAME }}:${{ needs.meta.outputs.version }}-arm64
          platforms: linux/arm64
          push: true
          labels: ${{ needs.meta.outputs.image_labels }}
          build-args: |
            HLEDGER_VERSION=${{ needs.meta.outputs.version }}

  multiarch:
    runs-on: ubuntu-latest
    needs: [meta, amd64, arm64]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Log into registry ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest and push
        run: |
          docker manifest create \
            ${{ env.REPO_IMAGE_NAME }}:${{ needs.meta.outputs.version }} \
            --amend ${{ env.REPO_IMAGE_NAME }}:${{ needs.meta.outputs.version }}-amd64 \
            --amend ${{ env.REPO_IMAGE_NAME }}:${{ needs.meta.outputs.version }}-arm64
          docker manifest push ${{ env.REPO_IMAGE_NAME }}:${{ needs.meta.outputs.version }}
          docker tag ${{ env.REPO_IMAGE_NAME }}:${{ needs.meta.outputs.version }} ${{ env.REPO_IMAGE_NAME }}:latest
          docker manifest push ${{ env.REPO_IMAGE_NAME }}:latest
